alpha.grid,
n.folds = 10,
trans.resp = FALSE,
cv.seed = 12345) {
if (!is.null(cv.seed)) {
set.seed(cv.seed)
}
n.alpha <- length(alpha.grid)
train.dat <- TransformDataMatrix(train.dat, trans.type, trans.resp)
test.dat <- TransformDataMatrix(test.dat, trans.type, trans.resp)
Y.train <- train.dat[, "resp"]
Y.test <- test.dat[, "resp"]
n.train <- length(Y.train)
train.weights <-
switch(error.type,
mse = rep(1/n.train, n.train),
mae = rep(1/n.train, n.train),
wmse = ComputeWeights(train.subject.ids),
wmae = ComputeWeights(train.subject.ids))
type.measure <-
switch(error.type, mse = "mse", mae = "mae", wmse = "mse", wmae = "mae")
lambs <- rep(NA, n.alpha)
alpha.error <- rep(NA, n.alpha)
for (j in seq(n.alpha)) {
cv.fit <- cv.glmnet(Pred.train.M, Y.train, nfolds = n.folds,
alpha = alpha.grid[j], weights = train.weights,
type.measure = type.measure)
lambs[j] <- cv.fit$lambda.min
alpha.error[j] <- cv.fit$cvm[which(cv.fit$lambda == cv.fit$lambda.min)]
}
best <- which.min(alpha.error)
best.alpha <- alpha.grid[best]
best.lambda <- lambs[best]
best.fit <- glmnet(Pred.train.M, Y.train, alpha = best.alpha,
lambda = best.lambda)
Pred <- predict(best.fit, newx = Pred.test.M, s = best.lambda)
stacking.weights <- best.fit$beta[, 1]
n.test <- length(Y.test)
pred.weights <-
switch(error.type,
mse = rep(1/n.test, n.test),
mae = rep(1/n.test, n.test),
wmse = ComputeWeights(test.subject.ids),
wmae = ComputeWeights(test.subject.ids))
error <-
switch(error.type,
mse = sum(pred.weights * (Y.test - Pred)^2),
mae = sum(pred.weights * abs(Y.test - Pred)),
wmse = sum(pred.weights * ((Y.test - Pred)^2)),
wmae = sum(pred.weights * abs(Y.test - Pred)))
list(ME = error,
error.type = error.type,
Pred = Pred,
Y.test = Y.test,
stacking.weights = stacking.weights,
best.alpha = best.alpha)
}
FreqSelFeatures <- function(feat.names, sel.features) {
n.runs <- length(sel.features)
M <- matrix(NA, n.runs, length(feat.names))
dimnames(M) <- list(NULL, feat.names)
for (i in seq(n.runs)) {
M[i, match(sel.features[[i]], feat.names)] <- 1
}
freq <- apply(M, 2, function(x) sum(!is.na(x)))/n.runs
list(freq = freq, M = M)
}
CountDuplicates <- function(x) {
aux <- duplicated(x)
aux <- unique(x[aux])
counts <- rep(1, length(x))
n <- length(aux)
for (i in seq(n)) {
pos <- which(x == aux[i])
counts[pos] <- length(pos)
}
counts
}
ComputeWeights <- function(x) {
counts <- CountDuplicates(x)
counts/sum(counts)
}
CreatePredsList <- function(x) {
n <- length(x)
model.nms <- names(x)[-c(1, n)] ## discard baseline model and output
n.models <- length(model.nms)
stacking.pred <- vector(mode = "list", length = n.models)
names(stacking.pred) <- model.nms
test.pred <- vector(mode = "list", length = n.models)
names(test.pred) <- model.nms
for (i in seq(n.models)) {
stacking.pred[[i]] <- x[[i+1]]$stacking.pred
test.pred[[i]] <- x[[i+1]]$Pred
}
list(stacking.pred = stacking.pred, test.pred = test.pred)
}
ShapePredMatrix2 <- function(x) {
n.methods <- length(x)
Pred.M <- matrix(NA, length(x[[1]]), n.methods)
for (i in seq(n.methods)) {
Pred.M[, i] <- x[[i]]
}
Pred.M
}
View(RandomForestRegrFitRuns)
View(RandomForestRegrFit)
View(RandomForestRegrFit)
View(CvRandomForest)
getwd()
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
knit_with_parameters('/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 5/R_Week_5_Demos.Rmd')
Avg_SigLev <- csv.read("Average_SignalLevel.csv")
Avg_SigLev <- read.csv("Average_SignalLevel.csv")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", "r")
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv")
View(Avg_SigLev)
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
attach(Avg_SigLev)
Avg_SigLev$Avg_SigLev <- mean(A, B, C)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
attach(Avg_SigLev)
Avg_SigLev$Avg_SigLev <- rowMeans(A, B, C)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
Avg_SigLev$Avg_SigLev <- rowMeans(Avg_SigLev[, c(A, B, C)])
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
Avg_SigLev$Avg_SigLev <- rowMeans(Avg_SigLev[, c("A", "B", "C")])
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
Avg_SigLev <- read.csv("Average_SignalLevel.csv", row.names = 1)
Avg_SigLev$Avg_SigLev <- rowMeans(Avg_SigLev[, c("A", "B", "C")])
aov_Avg_SigLev <- aov(SM_dx ~ Avg_SigLev + Error(URSI/Avg_SigLev), data=Avg_SigLev)
summary(aov_Avg_SigLev)
plot(Avg_SigLev$Avg_SigLev, Avg_SigLev$SM_dx)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv", row.names = 1)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(CPP_data$URSI), FUN="mean")
View(mean_CPP_data)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI = CPP_data$URSI), FUN="mean", drop=TRUE)
View(mean_CPP_data)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
View(mean_CPP_data)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
View(mean_CPP_data)
summary(aov_avgSigLev_v_turnCount)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
lines(aov_avgSigLev_v_turnCount)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
abline(aov_avgSigLev_v_turnCount)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
abline(lm(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel))
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
lines(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count")
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=4)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=3)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=7)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=10)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=13)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
setwd("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week\ 5/sample_data/Controlled\ Play\ Paradigm")
CPP_data <- read.csv("CPP_data_all.csv")
mean_CPP_data <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI), FUN="mean")
mean_CPP_data$URSI <- mean_CPP_data$URSI.i
mean_CPP_data$URSI.i <- NULL -> mean_CPP_data$Session
aov_avgSigLev_v_turnCount <- aov(Turn_Count ~ Average_SignalLevel + Error(URSI/Average_SignalLevel), data=mean_CPP_data)
plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
summary(aov_avgSigLev_v_turnCount)
View(mean_CPP_data)
mean_CPP_dx <- aggregate(CPP_data, by=list(URSI.i = CPP_data$URSI, SM_dx.i = CPP_data$SM_dx), FUN="mean")
View(mean_CPP_dx)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
#plot(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
summary(aov_avgSigLev_v_turnCount_by_dx)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
plot(filter(mean_CPP_data, SM_dx == 1)$Turn_Count ~ filter(mean_CPP_data, SM_dx == 1)$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
plot(filter(mean_CPP_data, mean_CPP_data$SM_dx == 1)$Turn_Count ~ filter(mean_CPP_data, mean_CPP_data$SM_dx == 1)$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
plot(filter(mean_CPP_data$Turn_Count ~ mean_CPP_data$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
summary(aov_avgSigLev_v_turnCount_by_dx)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
plot(mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]$Turn_Count ~ mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
summary(aov_avgSigLev_v_turnCount_by_dx)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
plot(mean_C_d_SM$Turn_Count ~ mean_C_d_SM$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
summary(aov_avgSigLev_v_turnCount_by_dx)
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
plot(mean_C_d_SM$Turn_Count ~ mean_C_d_SM$Average_SignalLevel, xlab="Average Signal Level", ylab="Average Turn Count", main="Average Signal Level v Turn Count", pch=20)
points(mean_C_d_noSM$Turn_Count ~ mean_C_d_noSM$Average_SignalLevel, pch=1)
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM$Turn_Count ~ mean_C_d_SM$Average_SignalLevel)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count) + geom_point())
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(mean_C_d_SM$Average_SignalLevel, mean_C_d_SM$Turn_Count) + geom_point())
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + ggplot(mean_C_d_noSM, aes(Average_SignalLevel, Turn_Count)) + geom_point()
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", main="Average Signal Level v Turn Count by SM dx")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Average_SignalLevel, Turn_Count, SM_dx)) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Average_SignalLevel, Turn_Count, group=SM_dx)) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Average_SignalLevel, Turn_Count, group=SM_dx)) + geom_boxplot() + geom_jitter()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Turn_Count, group=SM_dx)) + geom_boxplot() + geom_jitter()
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Turn_Count, group=SM_dx)) + geom_boxplot()
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Turn_Count, SM_dx)) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(SM_dx, Turn_Count)) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Average_SignalLevel, Turn_Count, group=SM_dx)) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
ggplot(mean_CPP_data, aes(Average_SignalLevel, Turn_Count, group=factor(SM_dx))) + geom_boxplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
qplot(factor(SM_dx), Turn_Count, data=mean_CPP_data, geom="boxplot")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
qplot(factor(SM_dx), Average_SignalLevel, Turn_Count, data=mean_CPP_data, geom="boxplot")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_dotplot() + geom_dotplot(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_dotplot()
summary(aov_avgSigLev_v_turnCount_by_dx)
library("ggplot2")
aov_avgSigLev_v_turnCount_by_dx <- aov(Turn_Count ~ (Average_SignalLevel * SM_dx) + Error(URSI/Average_SignalLevel) + SM_dx, data=mean_CPP_data)
mean_C_d_SM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 1), ]
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_point() + geom_point(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
mean_C_d_noSM <- mean_CPP_data[which(mean_CPP_data$SM_dx == 0), ]
ggplot(mean_C_d_SM, aes(Average_SignalLevel, Turn_Count)) + geom_dotplot() + geom_dotplot(data=mean_C_d_noSM, col="grey") + labs(x = "Average Signal Level", y = "Average Turn Count", main = "Average Turn Count", title="Average Signal Level v Turn Count by SM dx")
summary(aov_avgSigLev_v_turnCount_by_dx)
adults <- read("~/Workbook 1.xlsx")
adults <- csv.read("~/Workbook1.csv")
adults <- read.csv("~/Workbook1.csv")
View(adults)
# load libraries
require(tidyr)
require(dplyr)
require(ggplot2)
require(svglite)
# load data
# specify filepath to csv
fp <- "/Volumes/Data/Research/CDB/openSMILE/adults_speak/adults_speak.csv"
# read csv into `adults` variable as Boolean matrix
adults <- gather(read.csv(fp, header = TRUE, colClasses =
c(NA, "logical", "logical", "logical", "logical", "logical")),
cond, adults_speaking, -c(X, SM.dx))
# remove `fp` variable
remove(fp)
# reshape data
colnames(adults)[1] = "URSI"
adults = separate(data=adults, col=cond, into=c("vocal", "stranger"), remove=TRUE)
adults["stranger"] = adults["stranger"] == "w"
adults["vocal"] = adults["vocal"] == "vocal"
summary(aov(SM.dx ~ adults_speaking + Error(URSI), data=adults))
summary(aov(vocal ~ adults_speaking + Error(URSI), data=adults))
summary(aov(stranger ~ adults_speaking + Error(URSI), data=adults))
summary(aov(SM.dx ~ (vocal * stranger * adults_speaking) + Error(URSI)))
# load libraries
require(tidyr)
require(dplyr)
require(ggplot2)
require(svglite)
# load data
# specify filepath to csv
fp <- "/Volumes/Data/Research/CDB/openSMILE/adults_speak/adults_speak.csv"
# read csv into `adults` variable as Boolean matrix
adults <- gather(read.csv(fp, header = TRUE, colClasses =
c(NA, "logical", "logical", "logical", "logical", "logical")),
cond, adults_speaking, -c(X, SM.dx))
# remove `fp` variable
remove(fp)
# reshape data
colnames(adults)[1] = "URSI"
adults = separate(data=adults, col=cond, into=c("vocal", "stranger"), remove=TRUE)
adults["stranger"] = adults["stranger"] == "w"
adults["vocal"] = adults["vocal"] == "vocal"
summary(aov(SM.dx ~ adults_speaking + Error(URSI), data=adults))
summary(aov(vocal ~ adults_speaking + Error(URSI), data=adults))
summary(aov(stranger ~ adults_speaking + Error(URSI), data=adults))
summary(aov(SM.dx ~ (vocal * stranger * adults_speaking) + Error(URSI), data=adults))
summary(aov(adults_speaking ~ (vocal * stranger * SM.dx) + Error(URSI), data=adults))
adults %>%
group_by(stranger, vocal) %>%
filter(adults_speaking == TRUE) %>%
ggplot(aes(x=factor(vocal, labels=c("button press", "vocal")), fill=factor(stranger))) + geom_bar(position="dodge") + guides(fill=guide_legend(title="Stranger Presence")) + labs(title="Adult Vocalizations by Experimental Condition and Stranger Presence", x = "Experimental Condition", y="number of cases in which adults vocalized")
adults %>%
group_by(stranger, vocal) %>%
filter(adults_speaking == TRUE) %>%
ggplot(aes(x=factor(stranger), fill=factor(vocal, labels=c("button press", "vocal")))) + geom_bar(position="dodge") + guides(fill=guide_legend(title="Experimental Condition")) + labs(title="Adult Vocalizations by Stranger Presence and Experimental Condition", x = "Stranger Presence", y="number of cases in which adults vocalized")
require(tidyr)
source('~/SM_openSMILE/openSMILE_preprocessing/noise_replacement/adults_speak/ANOVAs.r', echo=TRUE)
